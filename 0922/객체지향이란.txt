객체지향(Object Oriented Programming)


객체(object) --> 아는것 : 속성(명사) 
		 하는것 : 기능(동사) 

클래스(class) --> 아는것: 속성 : 멤버필드		변수 --> 지역--> 멤버필드(클래스)
		  하는것: 기능 : (멤버)메소드		      |	       ㄴ> 지역변수(메소드)
							      ㄴ-->자료형--> 기본
									 ㄴ> 객체

클래스(자바는 클래스기반)와 객체와의 관계
!!! 클래스는 객체의 자료형이자 객체의 설계도 !!!


스택 vs heap

stack : 메소드 공간(지역변수), FILO(first in, last out)구조

heap : 클래스 영역(멤버필드) -> 객체 공간(객체가 생성되면 존재하는곳)

1. jvm이 main method호출 -> 스택영역에 -> main method 영역생성

기본자료형 변수 대입은 값이 직접 대입됨,
객체는 new 라는 키워드로 heap메모리 영역에 공간을 할당받는 키워드( ' . ' ), 
만약 설계도(클래스)에 멤버필드가 3개면, 객체에도 변수가 3개이어야 한다.
멤버필드는 객체가 만들어질때 초기값을 생성자가 넣어줌(편리성을 위해)
객체안에 있는 멤버필드는 알아서 초기화를 해줌(초기값은 자료형들의 기본값)
기본자료형들은 값이 직접대입되기 때문에 복사해서 붙어넣기가 되지만, 객체자료형의 값은 그 객체의 레퍼런스 값을 넣어줌
변수한개에 객체 두개 대입은 안됩니다. 그러나 한객체를 두변수에 대입은 된다~

class의 '멤버'는 	① static 멤버와 instance 멤버가 있다. 
        	② 멤버필드와 메소드가 있다.

변수 	① 자료형 ------>	① 기본
	       ㄴ----->	② 객체
	② 지역 ------->	① 멤버필드(클래스영역) ----->	① static
		|			 ㄴ----> ② instance
		ㄴ---->	② 지역변수(메소드영역)

멤버필드의 선언!
 --> 접근제한자(public, default, protected), (static) 자료형 변수명, instance 멤버필드

ㅇㅇㅇ접근제한자이고 기본자료형 ㅇㅇㅇ형의 static 멤버필드 or 지역변수, 
NullPointerException - runtime error발생